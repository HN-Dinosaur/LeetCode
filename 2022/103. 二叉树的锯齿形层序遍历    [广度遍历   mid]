//广度遍历
public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if(root == null)
            return list;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean isOrderLeft = true;
        while(!queue.isEmpty()){
            int size = queue.size();
            Deque<Integer> deque = new LinkedList<>();
            while(size > 0){
                TreeNode node = queue.poll();
                if(isOrderLeft)
                    deque.offerLast(node.val);
                else 
                    deque.offerFirst(node.val);
                if(node.left != null)
                    queue.offer(node.left);
                if(node.right != null)
                    queue.offer(node.right);
                size--;                
            }
            list.add((List<Integer>) deque);
            isOrderLeft = !isOrderLeft;
        }
        return list;
    }
