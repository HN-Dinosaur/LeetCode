class Solution {
    //Hash表解法
    public boolean isAnagram(String s, String t){
        if(s.length() != t.length())
            return false;
        Map<Character, Integer> map = new HashMap<>();
        for(int i = 0; i < s.length(); i++){
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
            map.put(t.charAt(i), map.getOrDefault(t.charAt(i), 0) - 1);
        }
        for(Character c: map.keySet()){
            if(map.get(c) != 0)
                return false;
        }
        return true;
    }
}


//数组解法
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length())
            return false;
        int[] array = new int[26];
        for(int i = 0; i < 26; i++){
            array[(int) (s.charAt(i) - 'a')]++;
            array[(int) (t.charAt(i) - 'a')]--;
        }
        for(int i = 0; i < 26; i++){
            if(array[i] != 0)
                return false;
        }
        return true;
    }
