//贪心思想 + 二分查找
public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        if(n < 2)
            return n;

        int[] tail = new int[n + 1];
        int len = 1;
        tail[len] = nums[len - 1];
        for(int i = 1; i < n; i++){
            if(tail[len] < nums[i])
                tail[++len] = nums[i];
            else{
                int l = 1, r = len, pos = 0;
                while(l <= r){
                    int mid = l + (r - l) / 2;
                    if(tail[mid] < nums[i]){
                        pos = mid;
                        l = mid + 1;
                    }else{
                        r = mid - 1;
                    }
                }
                tail[pos + 1] = nums[i];
            }
        }
        return len;
    }
//动态规划
public int lengthOfLIS(int[] nums) {
        int len = nums.length;
        if (len < 2) {
            return len;
        }

        int[] dp = new int[len];
        Arrays.fill(dp, 1);

        for (int i = 1; i < len; i++) {
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
        }

        int res = 0;
        for (int i = 0; i < len; i++) {
            res = Math.max(res, dp[i]);
        }
        return res;
    }
