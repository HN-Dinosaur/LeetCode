//左前缀 + 右后缀
class Solution {
   public int[] productExceptSelf(int[] nums) {
        int len = nums.length;
        int[] left = new int[len];
        int[] right = new int[len];
        int[] res = new int[len];
        left[0] = 1;
        for(int i = 1; i < len; i++)
            left[i] = nums[i - 1] * left[i - 1];
        right[len - 1] = 1;
        for(int i = len - 2; i >= 0; i--)
            right[i] = nums[i + 1] * right[i + 1];
        for(int i = 0; i < len; i++) 
            res[i] = left[i] * right[i];
        return res;
    }
}
//节省空间复杂度
class Solution {
   public int[] productExceptSelf(int[] nums) {
        int len = nums.length;
        int[] res = new int[len];
        res[0] = 1;
        //res先充当左前缀积数组
        for(int i = 1; i < len; i++){
            res[i] = res[i - 1] * nums[i - 1];
        }
        //R充当右前缀数组  节省空间复杂度
        int R = 1;
        for(int i = len - 1; i >= 0; i--){
            res[i] = res[i] * R;
            //动态
            R *= nums[i];
        }
        return res;
    }
}
