   //暴力遍历
   public boolean searchMatrix(int[][] matrix, int target) {
        for(int[] row: matrix){
            for(int column: row){
                if(column == target)
                    return true;
            }
        }
        return false;
    }
//Z字查找
    public boolean searchMatrix(int[][] matrix, int target) {
        int column = matrix[0].length;
        int row = matrix.length;
        int r = 0;
        int c = column - 1;
        while(r < row && c >= 0){
            if(matrix[r][c] == target)
                return true;
            if(matrix[r][c] < target)
                r++;
            else
                c--;
        }
        return false;
    }
//每行二分查找
public boolean searchMatrix(int[][] matrix, int target) {
        for(int[] row: matrix){
            int left = 0;
            int right = row.length - 1;
            while(left <= right){
                int mid = left + (right - left) / 2;
                if(row[mid] == target)
                    return true;
                else if(row[mid] < target)
                    left = mid + 1;
                else
                    right = mid - 1;
            }
        }
        return false;
    }
