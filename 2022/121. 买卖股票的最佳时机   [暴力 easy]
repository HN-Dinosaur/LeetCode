  //O(n * n) 不能ac
  public int maxProfit(int[] prices) {
        int max = 0;
        for(int i = 0; i < prices.length; i++){
            for(int j = i; j < prices.length; j++){
                if(prices[j] - prices[i] > max)
                    max = prices[j] - prices[i];
            }
        }
        return max;
    }
    
    //历史最低价格买入   最高卖出  O(n)
    public int maxProfit(int[] prices) {
        int maxProfit = 0;
        int minIn = Integer.MAX_VALUE;
        for(int i = 0; i < prices.length; i++){
            if(prices[i] < minIn)
                minIn = prices[i];
            else if(prices[i] - minIn > maxProfit)
                maxProfit = prices[i] - minIn;
        }
        return maxProfit;
    }
